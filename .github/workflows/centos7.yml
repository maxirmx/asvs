name: CentOS7

on:
  push:
    paths-ignore:
      - '**.md'
      - '.github/workflows/ubuntu.yml'
  pull_request:
#    branches: [ main ]
    paths-ignore:
      - '**.md'
    workflow_dispatch:

env:
  MAKEFLAGS: -j4
  CACHE_VER: 5
  DEPS: deps
  V_BOOST: '1.74.0'
  V_BOOST_: 1_74_0
  V_OPENSSL: '1.1.1k'
  PGPASSWORD: postgres

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    container:
      image: centos:7
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432    
    strategy:
      fail-fast: false
    steps:
      - name: Install packages
        run: |
          yum -y update
          yum -y remove git
          yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
          yum -y install epel-release 
          yum -y install double-conversion-devel jemalloc-devel glog-devel gflags-devel snappy-devel                    \
                         libevent-devel libsodium-devel gperf libzstd-devel xmlto xz-devel bzip2-devel python3 wget     \
                         bison flex cmake3 lz4-devel sudo git binutils-devel autoconf automake libtool                  \
                         libuuid-devel libatomic libcurl-devel perl-core pcre-devel pkgconfig postgresql10-devel
          yum clean all

      - name: Configure cmake
        run: |
          echo #! /bin/sh > /usr/local/bin/cmake
          echo cmake3 \"\$@\" > /usr/local/bin/cmake
          chmod +x /usr/local/bin/cmake

      - name: Install devtoolset-9
        run: |
          yum install centos-release-scl -y
          yum clean all
          yum install devtoolset-9-* -y
          scl enable devtoolset-9 -- gcc --version

      - name: Checkout
        uses: actions/checkout@v3

      - name: Create deps folder
        run: |
          mkdir ${{ env.DEPS }}
          mkdir bootstrap

      - name: Process cache
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.DEPS }}
            bootstrap
          key:  centos7-v${{ env.CACHE_VER }}

      - name: Load boost
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          cd bootstrap
          wget https://boostorg.jfrog.io/artifactory/main/release/${{ env.V_BOOST }}/source/boost_${{ env.V_BOOST_ }}.tar.gz -nv -O boost.tar.gz
          tar -xzf boost.tar.gz
          cd boost_${{ env.V_BOOST_ }}
          scl enable devtoolset-9 -- ./bootstrap.sh

      - name: Install boost
        run: |
          cd bootstrap/boost_${{ env.V_BOOST_ }}
          scl enable devtoolset-9 -- ./b2 -d1 --with-context --with-filesystem --with-program_options --with-regex  \
                                                             --with-system --with-thread --with-date_time           \
                                                             --with-iostreams --prefix=/usr/local install    

#      - name: Load OpenSSL 1.1.1
#        if: steps.cache-deps.outputs.cache-hit != 'true'
#        run: |
#          cd bootstrap
#          wget https://ftp.openssl.org/source/openssl-${V_OPENSSL}.tar.gz -nv -O openssl.tar.gz
#          tar -xzf openssl.tar.gz
#          cd openssl-${V_OPENSSL}
#          scl enable devtoolset-9 -- ./config --prefix=/usr/local --libdir=lib  --openssldir=/etc/ssl zlib-dynamic

#      - name: Install OpenSSL 1.1.1
#        run: |
#          cd bootstrap/openssl-${V_OPENSSL}
#          make
#          make install

      - name: Configure
        run: |
          mkdir build
          cd build
          scl enable devtoolset-9 -- cmake3 ..

      - name: Build
        run: |
          cd build
          scl enable devtoolset-9 -- make 

      - name: Smoke test
        run: |
          psql -h postgres -U postgres -d postgres -f db.scripts/db.init.sql
          build/server/server -postgres "user=postgres host=postgres port=5432 dbname=postgres password=postgres" &
          sleep 2
          curl --header "Content-Type: application/json" --data  "{ \"sp_customer_uuid\": \"4f4867be-0001-4670-9148-3a9f5c70016f\", \"dnc_lrn_replacement\":\"LRN1\", \"started_on\":\"1917-08-01 12:15:01\", \"expired_on\":\"2199-12-31 15:12:59\", \"active\": true, \"cps_limit\": 12 }" http://localhost:8080/api/customer_create          
          curl --header "Content-Type: application/json"  http://localhost:8080/api/stop
          psql -h postgres -U postgres -d postgres -f db.scripts/db.delete.sql
          psql -h postgres -U postgres -d postgres -f db.scripts/db.drop.sql

      - name: Checkout shell test framework
        uses: actions/checkout@v2
        with:
          repository: kward/shunit2
          path: ${{github.workspace}}/tests/shunit2
          fetch-depth: 1
