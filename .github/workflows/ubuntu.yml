name: Ubuntu

on:
  push:
    paths-ignore:
      - '**.md'
      - '.github/workflows/centos7.yml'
  pull_request:
#    branches: [ main ]
    paths-ignore:
      - '**.md'
  workflow_dispatch:

env:
  MAKEFLAGS: -j4
  CACHE_VER: 10
  DEPS: deps
  PGPASSWORD: postgres

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    # Service containers to run 
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432    
    steps:
      - name: Install packages
        run: |
          sudo apt-get -y update
          sudo apt-get -y install \
          bison flex libcap-dev libevent-dev libiberty-dev libnuma-dev libsnappy-dev  \
          libsodium-dev libtool m4 make pkg-config unzip gperf libboost-all-dev       \
          libdouble-conversion-dev libgflags-dev libgoogle-glog-dev libjemalloc-dev   \
          binutils-dev libkrb5-dev liblz4-dev liblzma-dev libsasl2-dev libssl-dev     \
          libzstd-dev zlib1g-dev wget cmake autoconf automake libcurl4-openssl-dev    \
          uuid-dev g++ gnupg2 lsb-release

      - name: Checkout
        uses: actions/checkout@v3

      - name: Create deps folder
        run: |
          mkdir ${{github.workspace}}/${{env.DEPS}}

      - name: Process cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/${{env.DEPS}}
          key:  ubuntu-v${{ env.CACHE_VER }}

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake ..

      - name: Build
        run: |
          cd build
          make

      - name: Smoke test
        run: |
          psql -h localhost -U postgres -d postgres -f db.scripts/db.init.sql
          build/server/server -postgres "user=postgres host=localhost port=5432 dbname=postgres password=postgres" 
          sleep 2
          curl --header "Content-Type: application/json" --data  "{ \"sp_customer_uuid\": \"4f4867be-0001-4670-9148-3a9f5c70016f\", \"dnc_lrn_replacement\":\"LRN1\", \"started_on\":\"1917-08-01 12:15:01\", \"expired_on\":\"2199-12-31 15:12:59\", \"active\": true, \"cps_limit\": 12 }" http://localhost:8080/api/customer_create          
          curl --header "Content-Type: application/json"  http://localhost:8080/api/stop
          psql -h localhost -U postgres -d postgres -f db.scripts/db.delete.sql
          psql -h localhost -U postgres -d postgres -f db.scripts/db.drop.sql

      - name: Checkout shell test framework
        uses: actions/checkout@v2
        with:
          repository: kward/shunit2
          path: ${{github.workspace}}/tests/shunit2
          fetch-depth: 1
